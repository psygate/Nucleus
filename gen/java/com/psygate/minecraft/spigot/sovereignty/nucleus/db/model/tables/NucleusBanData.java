/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.nucleus.bans.BanType;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.tables.records.NucleusBanDataRecord;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.BanTypeConverter;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.ByteBooleanConverter;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NucleusBanData extends TableImpl<NucleusBanDataRecord> {

	private static final long serialVersionUID = 1730311531;

	/**
	 * The reference instance of <code>nucleus.nucleus_ban_data</code>
	 */
	public static final NucleusBanData NUCLEUS_BAN_DATA = new NucleusBanData();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NucleusBanDataRecord> getRecordType() {
		return NucleusBanDataRecord.class;
	}

	/**
	 * The column <code>nucleus.nucleus_ban_data.ban_id</code>.
	 */
	public final TableField<NucleusBanDataRecord, Long> BAN_ID = createField("ban_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.nucleus_ban_data.ban_type</code>.
	 */
	public final TableField<NucleusBanDataRecord, BanType> BAN_TYPE = createField("ban_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new BanTypeConverter());

	/**
	 * The column <code>nucleus.nucleus_ban_data.banned_by_puuid</code>.
	 */
	public final TableField<NucleusBanDataRecord, UUID> BANNED_BY_PUUID = createField("banned_by_puuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.nucleus_ban_data.ban_time</code>.
	 */
	public final TableField<NucleusBanDataRecord, Timestamp> BAN_TIME = createField("ban_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>nucleus.nucleus_ban_data.banned_until</code>.
	 */
	public final TableField<NucleusBanDataRecord, Timestamp> BANNED_UNTIL = createField("banned_until", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>nucleus.nucleus_ban_data.banned_forever_bool</code>.
	 */
	public final TableField<NucleusBanDataRecord, Boolean> BANNED_FOREVER_BOOL = createField("banned_forever_bool", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "", new ByteBooleanConverter());

	/**
	 * The column <code>nucleus.nucleus_ban_data.ban_reason</code>.
	 */
	public final TableField<NucleusBanDataRecord, String> BAN_REASON = createField("ban_reason", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * Create a <code>nucleus.nucleus_ban_data</code> table reference
	 */
	public NucleusBanData() {
		this("nucleus_ban_data", null);
	}

	/**
	 * Create an aliased <code>nucleus.nucleus_ban_data</code> table reference
	 */
	public NucleusBanData(String alias) {
		this(alias, NUCLEUS_BAN_DATA);
	}

	private NucleusBanData(String alias, Table<NucleusBanDataRecord> aliased) {
		this(alias, aliased, null);
	}

	private NucleusBanData(String alias, Table<NucleusBanDataRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NucleusBanDataRecord, Long> getIdentity() {
		return Keys.IDENTITY_NUCLEUS_BAN_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NucleusBanDataRecord> getPrimaryKey() {
		return Keys.KEY_NUCLEUS_BAN_DATA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NucleusBanDataRecord>> getKeys() {
		return Arrays.<UniqueKey<NucleusBanDataRecord>>asList(Keys.KEY_NUCLEUS_BAN_DATA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NucleusBanData as(String alias) {
		return new NucleusBanData(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NucleusBanData rename(String name) {
		return new NucleusBanData(name, null);
	}
}
