/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.tables.records.NucleusPluginVersionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NucleusPluginVersions extends TableImpl<NucleusPluginVersionsRecord> {

	private static final long serialVersionUID = 944681665;

	/**
	 * The reference instance of <code>nucleus.nucleus_plugin_versions</code>
	 */
	public static final NucleusPluginVersions NUCLEUS_PLUGIN_VERSIONS = new NucleusPluginVersions();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NucleusPluginVersionsRecord> getRecordType() {
		return NucleusPluginVersionsRecord.class;
	}

	/**
	 * The column <code>nucleus.nucleus_plugin_versions.plugin_name</code>.
	 */
	public final TableField<NucleusPluginVersionsRecord, String> PLUGIN_NAME = createField("plugin_name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

	/**
	 * The column <code>nucleus.nucleus_plugin_versions.plugin_version</code>.
	 */
	public final TableField<NucleusPluginVersionsRecord, Integer> PLUGIN_VERSION = createField("plugin_version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>nucleus.nucleus_plugin_versions</code> table reference
	 */
	public NucleusPluginVersions() {
		this("nucleus_plugin_versions", null);
	}

	/**
	 * Create an aliased <code>nucleus.nucleus_plugin_versions</code> table reference
	 */
	public NucleusPluginVersions(String alias) {
		this(alias, NUCLEUS_PLUGIN_VERSIONS);
	}

	private NucleusPluginVersions(String alias, Table<NucleusPluginVersionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private NucleusPluginVersions(String alias, Table<NucleusPluginVersionsRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NucleusPluginVersionsRecord> getPrimaryKey() {
		return Keys.KEY_NUCLEUS_PLUGIN_VERSIONS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NucleusPluginVersionsRecord>> getKeys() {
		return Arrays.<UniqueKey<NucleusPluginVersionsRecord>>asList(Keys.KEY_NUCLEUS_PLUGIN_VERSIONS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NucleusPluginVersions as(String alias) {
		return new NucleusPluginVersions(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NucleusPluginVersions rename(String name) {
		return new NucleusPluginVersions(name, null);
	}
}
