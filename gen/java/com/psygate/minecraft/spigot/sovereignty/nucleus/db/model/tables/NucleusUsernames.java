/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.nucleus.db.model.tables.records.NucleusUsernamesRecord;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NucleusUsernames extends TableImpl<NucleusUsernamesRecord> {

	private static final long serialVersionUID = -1324436705;

	/**
	 * The reference instance of <code>nucleus.nucleus_usernames</code>
	 */
	public static final NucleusUsernames NUCLEUS_USERNAMES = new NucleusUsernames();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NucleusUsernamesRecord> getRecordType() {
		return NucleusUsernamesRecord.class;
	}

	/**
	 * The column <code>nucleus.nucleus_usernames.username</code>.
	 */
	public final TableField<NucleusUsernamesRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>nucleus.nucleus_usernames.puuid</code>.
	 */
	public final TableField<NucleusUsernamesRecord, UUID> PUUID = createField("puuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * Create a <code>nucleus.nucleus_usernames</code> table reference
	 */
	public NucleusUsernames() {
		this("nucleus_usernames", null);
	}

	/**
	 * Create an aliased <code>nucleus.nucleus_usernames</code> table reference
	 */
	public NucleusUsernames(String alias) {
		this(alias, NUCLEUS_USERNAMES);
	}

	private NucleusUsernames(String alias, Table<NucleusUsernamesRecord> aliased) {
		this(alias, aliased, null);
	}

	private NucleusUsernames(String alias, Table<NucleusUsernamesRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NucleusUsernamesRecord> getPrimaryKey() {
		return Keys.KEY_NUCLEUS_USERNAMES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NucleusUsernamesRecord>> getKeys() {
		return Arrays.<UniqueKey<NucleusUsernamesRecord>>asList(Keys.KEY_NUCLEUS_USERNAMES_USERNAME, Keys.KEY_NUCLEUS_USERNAMES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NucleusUsernames as(String alias) {
		return new NucleusUsernames(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NucleusUsernames rename(String name) {
		return new NucleusUsernames(name, null);
	}
}
